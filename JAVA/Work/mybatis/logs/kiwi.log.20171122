main> [2017-11-22 14:31:21] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ea434c8: startup date [Wed Nov 22 14:31:21 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:31:21] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 14:31:22] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [ApplicationContext.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0': Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:472)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at java24.mybatis.TestServiceBook.setUpBeforeClass(TestServiceBook.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0': Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:547)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:243)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:984)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:955)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:466)
	... 25 more
Caused by: java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:572)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:489)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:475)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1038)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	... 37 more
Caused by: java.lang.ClassNotFoundException: org.aspectj.weaver.reflect.ReflectionWorld$ReflectionWorldException
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 55 more
main> [2017-11-22 14:31:45] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ea434c8: startup date [Wed Nov 22 14:31:45 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:31:45] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 14:31:46] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [ApplicationContext.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0': Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:472)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at java24.mybatis.TestServiceBook.setUpBeforeClass(TestServiceBook.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0': Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:547)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:243)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:984)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:955)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:466)
	... 25 more
Caused by: java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:572)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:489)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:475)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1038)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	... 37 more
Caused by: java.lang.ClassNotFoundException: org.aspectj.weaver.reflect.ReflectionWorld$ReflectionWorldException
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 55 more
main> [2017-11-22 14:36:22] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ea434c8: startup date [Wed Nov 22 14:36:22 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:36:22] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 14:36:22] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [ApplicationContext.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0': Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:472)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at java24.mybatis.TestServiceBook.setUpBeforeClass(TestServiceBook.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0': Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:547)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:243)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:984)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:955)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:466)
	... 25 more
Caused by: java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:572)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:489)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:475)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1038)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	... 37 more
Caused by: java.lang.ClassNotFoundException: org.aspectj.weaver.reflect.ReflectionWorld$ReflectionWorldException
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 55 more
main> [2017-11-22 14:36:55] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 14:36:55 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:36:55] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 14:36:56] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 14:36:56] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 14:36:56] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 14:36:56] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 14:36:56] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 14:36:56] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 14:36:56] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:36:56] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:36:56] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 14:36:56] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:36:56] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 14:36:56] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 14:36:56] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 14:36:56] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 14:36:56] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [ApplicationContext.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:736)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at java24.mybatis.TestServiceBook.setUpBeforeClass(TestServiceBook.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:434)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:340)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1570)
	... 27 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:109)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parse(XMLConfigBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:428)
	... 30 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.mapperElement(XMLConfigBuilder.java:322)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:107)
	... 32 more
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:103)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:66)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 35 more
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:117)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:130)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:101)
	... 39 more
Caused by: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:190)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:256)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:113)
	... 41 more
main> [2017-11-22 14:37:53] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 14:37:53 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:37:53] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 14:37:54] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 14:37:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 14:37:54] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 14:37:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 14:37:54] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 14:37:54] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 14:37:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:37:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:37:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 14:37:54] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:37:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 14:37:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 14:37:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 14:37:54] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 14:37:54] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [ApplicationContext.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:736)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at java24.mybatis.TestServiceBook.setUpBeforeClass(TestServiceBook.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:434)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:340)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1570)
	... 27 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:109)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parse(XMLConfigBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:428)
	... 30 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.mapperElement(XMLConfigBuilder.java:322)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:107)
	... 32 more
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:103)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:66)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 35 more
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:117)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:130)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:101)
	... 39 more
Caused by: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:190)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:256)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:113)
	... 41 more
main> [2017-11-22 14:38:16] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 14:38:16 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:38:16] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 14:38:17] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 14:38:17] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 14:38:17] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 14:38:17] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 14:38:17] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 14:38:17] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 14:38:17] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:38:17] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:38:18] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 14:38:18] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:38:18] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 14:38:18] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 14:38:18] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 14:38:18] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 14:38:18] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [ApplicationContext.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:736)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at java24.mybatis.TestServiceBook.setUpBeforeClass(TestServiceBook.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:434)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:340)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1570)
	... 27 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:109)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parse(XMLConfigBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:428)
	... 30 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.mapperElement(XMLConfigBuilder.java:322)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:107)
	... 32 more
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:103)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:66)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 35 more
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.util.map'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:117)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:130)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:101)
	... 39 more
Caused by: java.lang.ClassNotFoundException: Cannot find class: java.util.map
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:190)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:256)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:113)
	... 41 more
main> [2017-11-22 14:40:03] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 14:40:03 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:40:04] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 14:40:05] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 14:40:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 14:40:05] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 14:40:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 14:40:05] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 14:40:05] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 14:40:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:40:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:40:05] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 14:40:05] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:40:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 14:40:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 14:40:05] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 14:40:05] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 14:40:05] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 14:40:05] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 14:40:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 14:40:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 14:40:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 14:40:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 14:44:52] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 14:44:52 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:44:52] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 14:44:53] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 14:44:53] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 14:44:53] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 14:44:53] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 14:44:53] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 14:44:53] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 14:44:53] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:44:53] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:44:53] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 14:44:53] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 14:44:53] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 14:44:53] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 14:44:53] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 14:44:53] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 14:44:54] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 14:44:54] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 14:44:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 14:44:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 14:44:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 14:44:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:05:04] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 15:05:04 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:05:04] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:05:05] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:05:06] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:05:06] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:05:06] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:05:06] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:05:06] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:05:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:05:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:05:06] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:05:06] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:05:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:05:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:05:06] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:05:06] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:05:06] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:05:06] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:05:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:05:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:05:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:05:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:06:16] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 15:06:16 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:06:16] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:06:18] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:06:18] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:06:18] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:06:18] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:06:18] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:06:18] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:06:18] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:06:18] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:06:18] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:06:18] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:06:18] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:06:18] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:06:18] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:06:18] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:06:18] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:06:18] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:06:18] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:06:18] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:06:18] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:06:18] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:17:05] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 15:17:05 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:17:05] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:17:06] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:17:07] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:17:07] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:17:07] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:17:07] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:17:07] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:17:07] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:17:07] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:17:07] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:17:07] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:17:07] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:17:07] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:17:07] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:17:07] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:17:07] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:17:07] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:17:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:17:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:17:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:17:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:18:00] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 15:18:00 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:18:00] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:18:01] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:18:01] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:18:01] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:18:01] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:18:01] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:18:01] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:18:01] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:18:01] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:18:01] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:18:01] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:18:01] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:18:01] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:18:01] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:18:01] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:18:01] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:18:01] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:18:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:18:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:18:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:18:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:20:16] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 15:20:16 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:20:16] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:20:17] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:20:17] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:20:17] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:20:17] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:20:17] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:20:17] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:20:17] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:20:17] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:20:17] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:20:17] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:20:17] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:20:17] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:20:17] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:20:17] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:20:17] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:20:17] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:20:17] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:20:17] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:20:17] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:20:17] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:21:52] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 15:21:52 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:21:52] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:21:53] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:21:53] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:21:53] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:21:53] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:21:53] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:21:53] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:21:53] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:21:53] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:21:53] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:21:53] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:21:53] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:21:53] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:21:53] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:21:53] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:21:53] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:21:53] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:21:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:21:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:21:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:21:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:21:53] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:21:53] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:53] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:21:53] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:21:53] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:21:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:21:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:21:58] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:21:58] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@777c9dc9] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:21:58] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 15:21:58] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1457417579, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 15:21:58] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1 = 1  
main> [2017-11-22 15:21:58] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 15:21:59] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 15:21:59] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@777c9dc9] 
main> [2017-11-22 15:21:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 15:47:20] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 15:47:20 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:47:20] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:47:21] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:47:21] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:47:21] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:47:21] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:47:21] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:47:21] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:47:21] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:47:21] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:47:21] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:47:21] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:47:21] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:47:21] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:47:21] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:47:21] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:47:21] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:47:21] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:47:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:47:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:47:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:47:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:47:21] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:47:21] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:21] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:47:21] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:47:21] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:47:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:47:21] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:47:24] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:47:24] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@777c9dc9] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:47:24] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 15:47:25] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1808527451, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 15:47:25] [getMaxBookid] [139] [DEBUG] ==>  Preparing: select max(bookid) bookid from book  
main> [2017-11-22 15:47:25] [getMaxBookid] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 15:47:25] [getMaxBookid] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 15:47:25] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@777c9dc9] 
main> [2017-11-22 15:47:25] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 15:57:59] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 15:57:59 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:57:59] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:57:59] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:57:59] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:57:59] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:57:59] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:57:59] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:57:59] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:57:59] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:57:59] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:57:59] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:57:59] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 15:57:59] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:57:59] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:57:59] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:57:59] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:57:59] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:57:59] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:57:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:57:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:57:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:57:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:57:59] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:57:59] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:57:59] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:57:59] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:57:59] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:57:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:57:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:58:06] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:58:06] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@777c9dc9] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:58:06] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 15:58:06] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1676010932, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 15:58:06] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1 = 1  
main> [2017-11-22 15:58:06] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 15:58:06] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 15:58:06] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@777c9dc9] 
main> [2017-11-22 15:58:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:04:48] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:04:48 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:04:48] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:04:49] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:04:49] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:04:49] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:04:49] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:04:49] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:04:49] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:04:49] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:04:49] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:04:49] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:04:49] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:04:49] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:04:49] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:04:49] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:04:49] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:04:49] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:04:49] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:04:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:04:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:04:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:04:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:04:49] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:04:49] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:49] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:04:49] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:04:49] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:04:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:04:49] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:04:49] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:04:49] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:04:49] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book  
main> [2017-11-22 16:04:49] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:04:49] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:04:49] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:04:49] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:04:49] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:04:49] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:28:50] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:28:50 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:28:50] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:28:51] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:28:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:28:51] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:28:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:28:51] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:28:51] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:28:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:28:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:28:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:28:51] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:28:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:28:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:28:51] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:28:51] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:28:51] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:28:51] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:28:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:28:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:28:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:28:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:28:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:28:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:28:51] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:28:51] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:28:51] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:28:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:28:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:28:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:28:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:28:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:28:51] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:28:51] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:28:51] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:28:51] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book  
main> [2017-11-22 16:28:51] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:28:51] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:28:51] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:28:51] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:28:51] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:28:51] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:28:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:28:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:28:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:28:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:28:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:29:52] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:29:52 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:29:52] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:29:52] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:29:52] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:29:52] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:29:52] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:29:52] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:29:52] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:29:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:29:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:29:52] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:29:52] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:29:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:29:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:29:52] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:29:52] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:29:52] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:29:52] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:29:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:29:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:29:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:29:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:29:52] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:29:52] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:29:52] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:29:52] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:29:52] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:29:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:29:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:29:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:29:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:29:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:29:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:29:53] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:29:53] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:29:53] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:29:53] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book  
main> [2017-11-22 16:29:53] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:29:53] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:29:53] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:29:53] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:29:53] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:29:53] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:29:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:29:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:29:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:29:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:29:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:29:53] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:29:53] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77ee25f1] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 16:29:53] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 16:29:53] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 16:29:53] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1 = 1  
main> [2017-11-22 16:29:53] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:29:53] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 16:29:53] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77ee25f1] 
main> [2017-11-22 16:29:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:32:28] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:32:28 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:32:28] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:32:29] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:32:29] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:32:29] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:32:29] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:32:29] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:32:29] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:32:29] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:32:29] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:32:29] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:32:29] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:32:29] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:32:29] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:32:29] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:32:29] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:32:29] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:32:29] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:32:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:32:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:32:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:32:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:32:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:32:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:32:29] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:32:29] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:32:29] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:32:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:32:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:32:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:32:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:32:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:32:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:32:29] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:32:29] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:32:29] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:32:29] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:32:29] [selectLike] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:32:30] [selectLike] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:32:30] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:32:30] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:32:30] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:32:30] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:32:30] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:32:30] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:32:30] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:32:30] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:32:30] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:36:23] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:36:23 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:36:23] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:36:23] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:36:23] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:36:23] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:36:23] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:36:23] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:36:23] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:36:23] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:36:23] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:36:23] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:36:23] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:36:23] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:36:23] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:36:23] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:36:23] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:36:23] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:36:23] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:36:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:36:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:36:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:36:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:36:23] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:36:23] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:23] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:36:23] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:36:23] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:36:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:36:23] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:36:23] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:36:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:36:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:36:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:36:24] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:36:24] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:36:24] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:36:24] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:36:24] [selectLike] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:36:24] [selectLike] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:36:24] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:36:24] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:36:24] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:36:24] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:36:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:36:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:36:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:36:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:36:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:37:51] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:37:51 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:37:51] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:37:52] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:37:52] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:37:52] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:37:52] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:37:52] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:37:52] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:37:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:37:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:37:52] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:37:52] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:37:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:37:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:37:52] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:37:52] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:37:52] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:37:52] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:37:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:37:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:37:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:37:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:37:52] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:37:52] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:52] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:37:52] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:37:52] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:37:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:37:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:37:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:37:52] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:37:52] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:37:52] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:37:52] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:37:52] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:37:52] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:37:52] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:37:52] [selectLike] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:37:52] [selectLike] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:37:52] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:37:52] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:37:52] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:37:52] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:37:52] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:37:52] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:37:52] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:37:52] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:37:52] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:39:40] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:39:40 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:39:40] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:39:41] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:39:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:39:41] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:39:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:39:41] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:39:41] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:39:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:39:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:39:41] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:39:41] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:39:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:39:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:39:41] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:39:41] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:39:41] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:39:41] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:39:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:39:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:39:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:39:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:39:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:39:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:41] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:39:41] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:39:41] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:39:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:39:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:39:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:39:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:39:41] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:39:41] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:39:41] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:39:41] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 16:39:41] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 16:39:41] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 16:39:41] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:39:41] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:39:41] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:39:41] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:39:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:39:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:39:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:39:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:39:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:43:21] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:43:21 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:43:21] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:43:21] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:43:22] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:43:22] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:43:22] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:43:22] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:43:22] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:43:22] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:43:22] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:43:22] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:43:22] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:43:22] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:43:22] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:43:22] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:43:22] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:43:22] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:43:22] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:43:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:43:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:43:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:43:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:43:22] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:43:22] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:43:22] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:43:22] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:43:22] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:43:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:43:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:43:22] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:43:22] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:43:22] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:43:22] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:43:22] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:43:22] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:43:22] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:43:22] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:43:22] [selectEqual] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:43:22] [selectEqual] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:43:22] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:43:22] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:43:22] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:43:22] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:43:22] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:43:22] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:43:22] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:43:22] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:43:22] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:46:01] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:46:01 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:46:01] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:46:01] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:46:01] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:46:01] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:46:01] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:46:01] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:46:01] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:46:01] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:46:01] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:46:01] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:46:01] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:46:01] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:46:01] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:46:01] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:46:01] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:46:01] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:46:01] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:46:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:46:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:46:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:46:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:46:01] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:46:01] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:46:01] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:46:01] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:46:01] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:46:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:46:01] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:46:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:46:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:46:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:46:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:46:02] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:46:02] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:46:02] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:46:02] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:46:02] [selectLike] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:46:02] [selectLike] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:46:02] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:46:02] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:46:02] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:46:02] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:46:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:46:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:46:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:46:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:46:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:46:38] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:46:38 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:46:38] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:46:38] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:46:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:46:38] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:46:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:46:38] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:46:38] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:46:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:46:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:46:38] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:46:38] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:46:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:46:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:46:38] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:46:38] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:46:39] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:46:39] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:46:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:46:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:46:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:46:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:46:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:46:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:46:39] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:46:39] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:46:39] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:46:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:46:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:46:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:46:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:46:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:46:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:46:39] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:46:39] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:46:39] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:46:39] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:46:39] [selectLike] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:46:39] [selectLike] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:46:39] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:46:39] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:46:39] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:46:39] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:46:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:46:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:46:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:46:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:46:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:47:10] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:47:10 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:47:10] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:47:10] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:47:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:47:11] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:47:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:47:11] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:47:11] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:47:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:47:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:47:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:47:11] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:47:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:47:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:47:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:47:11] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:47:11] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:47:11] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:47:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:47:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:47:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:47:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:47:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:47:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:11] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:47:11] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:47:11] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:47:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:47:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:47:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:47:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:47:11] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:47:11] [selectLike] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:47:11] [selectLike] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:47:11] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:47:11] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:47:11] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:47:11] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:47:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:47:11] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cd1c1dc] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 16:47:11] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 16:47:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 16:47:11] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1 = 1  
main> [2017-11-22 16:47:11] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:47:11] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 16:47:11] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cd1c1dc] 
main> [2017-11-22 16:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:48:17] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:48:17 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:48:17] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:48:17] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:48:17] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:48:17] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:48:17] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:48:17] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:48:17] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:48:17] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:48:17] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:48:17] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:48:17] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:48:17] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:48:17] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:48:17] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:48:17] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:48:17] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:48:17] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:48:18] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:48:18] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:48:18] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:48:18] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:48:18] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:48:18] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:18] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:48:18] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:48:18] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:48:18] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:48:18] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:48:18] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:48:18] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:48:18] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:48:18] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:48:18] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:48:18] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:48:18] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:48:18] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:48:18] [selectEqual] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:48:18] [selectEqual] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:48:18] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:48:18] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:48:18] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:48:18] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:48:18] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:48:18] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:48:18] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:48:18] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:48:18] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:51:10] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:51:10 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:51:10] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:51:11] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:51:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:51:11] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:51:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:51:11] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:51:11] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:51:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:51:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:51:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:51:11] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:51:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:51:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:51:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:51:11] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:51:11] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:51:11] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:51:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:51:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:51:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:51:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:51:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:51:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:51:11] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:51:11] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:51:11] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:51:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:51:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:51:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:51:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:51:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:51:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:51:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:51:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:51:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:51:11] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:51:11] [selectEqual] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:51:12] [selectEqual] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:51:12] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:51:12] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:51:12] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:51:12] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:51:12] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:51:12] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:51:12] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:51:12] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:51:12] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:51:12] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:51:12] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cd1c1dc] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 16:51:12] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 16:51:12] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 16:51:12] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1 = 1  
main> [2017-11-22 16:51:12] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:51:12] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 16:51:12] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cd1c1dc] 
main> [2017-11-22 16:51:12] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:51:45] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:51:45 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:51:45] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:51:45] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:51:46] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:51:46] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:51:46] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:51:46] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:51:46] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:51:46] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:51:46] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:51:46] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:51:46] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:51:46] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:51:46] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:51:46] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:51:46] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:51:46] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:51:46] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:51:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:51:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:51:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:51:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:51:46] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:51:46] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:51:46] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:51:46] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:51:46] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:51:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:51:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:51:46] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:51:46] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:51:46] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:51:46] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:51:46] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:51:46] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:51:46] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:51:46] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:51:46] [selectLike] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:51:46] [selectLike] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:51:46] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:51:46] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:51:46] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:51:46] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:51:46] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:51:46] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:51:46] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:51:46] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:51:46] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:54:36] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:54:36 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:54:36] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:54:36] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:54:36] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:54:36] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:54:36] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:54:36] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:54:36] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:54:36] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:54:36] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:54:36] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:54:36] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:54:36] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:54:36] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:54:36] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:54:36] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:54:36] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:54:36] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:54:36] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:54:36] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:54:36] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:54:36] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:54:36] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:54:36] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:54:36] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:54:36] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:54:36] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:54:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:54:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:54:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:54:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:54:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:54:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:54:37] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:54:37] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:54:37] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:54:37] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 16:54:37] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 16:54:37] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 16:54:37] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:54:37] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:54:37] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:54:37] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:54:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:54:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:54:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:54:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:54:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:58:39] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:58:39 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:58:39] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:58:39] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:58:40] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:58:40] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:58:40] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:58:40] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:58:40] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:58:40] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:58:40] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:58:40] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:58:40] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:58:40] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:58:40] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:58:40] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:58:40] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:58:40] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:58:40] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:58:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:58:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:58:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:58:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:58:40] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:58:40] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:58:40] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:58:40] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:58:40] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:58:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:58:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:58:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:58:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:58:40] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:58:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:58:40] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:58:40] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:58:40] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:58:40] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 16:58:40] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 16:58:40] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 16:58:40] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:58:40] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:58:40] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:58:40] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:58:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:58:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:58:40] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:58:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:58:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:59:08] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:59:08 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:59:08] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:59:08] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:59:08] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:59:08] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:59:08] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:59:08] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:59:08] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:59:08] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:59:08] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:59:08] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:59:08] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:59:08] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:59:08] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:59:08] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:59:08] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:59:09] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:59:09] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:59:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:59:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:59:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:59:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:59:09] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:59:09] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:59:09] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:59:09] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:59:09] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:59:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:59:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:59:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:59:09] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:59:09] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:59:09] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:59:09] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:59:09] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:59:09] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:59:09] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 16:59:09] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 16:59:09] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 16:59:09] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:59:09] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:59:09] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:59:09] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 16:59:09] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:59:09] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:59:09] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:59:09] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:59:09] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:59:26] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:59:26 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:59:26] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:59:26] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:59:26] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:59:26] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:59:26] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:59:26] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:59:26] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:59:26] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:59:26] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:59:26] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:59:26] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:59:26] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:59:26] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:59:26] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:59:26] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:59:26] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:59:26] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:59:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:59:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:59:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:59:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:59:26] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:59:26] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:59:26] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:59:26] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:59:26] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:59:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:59:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:59:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:59:27] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:59:27] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:59:27] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:59:27] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:59:27] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:59:27] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:59:27] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 16:59:27] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 16:59:27] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 16:59:27] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:59:27] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:59:27] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:59:27] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:59:27] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:59:27] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:59:27] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:59:27] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:59:27] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:59:53] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 16:59:53 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:59:53] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:59:53] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:59:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:59:54] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:59:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:59:54] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:59:54] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:59:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:59:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:59:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:59:54] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 16:59:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:59:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:59:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:59:54] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:59:54] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:59:54] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:59:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:59:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:59:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:59:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:59:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:59:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:59:54] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:59:54] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:59:54] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:59:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:59:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:59:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:59:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:59:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:59:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:59:54] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:59:54] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:59:54] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:59:54] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 16:59:54] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 16:59:54] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 16:59:54] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:59:54] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:59:54] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:59:54] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 16:59:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:59:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:59:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:59:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:59:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:00:01] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@525f1e4e: startup date [Wed Nov 22 17:00:01 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:00:01] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:00:02] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:00:02] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:00:02] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:00:02] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:00:02] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:00:02] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:00:02] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:00:02] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:00:02] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:00:02] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:00:02] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:00:02] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:00:02] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:00:02] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:00:02] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:00:02] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:00:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:00:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:00:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:00:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:00:02] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:00:02] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@2f3c6ac4] 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:00:02] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:00:02] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:00:02] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:00:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:00:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26f3d90c] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 17:00:02] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 17:00:02] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1658704411, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 17:00:02] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1 = 1  
main> [2017-11-22 17:00:02] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 17:00:02] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26f3d90c] 
main> [2017-11-22 17:00:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [754707140, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:00:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bee18dc] 
main> [2017-11-22 17:00:02] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:00:02] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book  
main> [2017-11-22 17:00:02] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 17:00:02] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bee18dc] 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bee18dc] 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bee18dc] 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bee18dc] 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [754707140, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:00:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:00:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@267517e4] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 17:00:02] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 17:00:02] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1114525788, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 17:00:02] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1 = 1  
main> [2017-11-22 17:00:02] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 17:00:02] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@267517e4] 
main> [2017-11-22 17:00:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [78816013, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:00:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [78816013, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [78816013, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f952d6c] 
main> [2017-11-22 17:00:02] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [78816013, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:00:02] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 17:00:02] [selectEqual] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 17:00:02] [selectEqual] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f952d6c] 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f952d6c] 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f952d6c] 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f952d6c] 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [78816013, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:00:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [78816013, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [78816013, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:00:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4ba480] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 17:00:02] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 17:00:02] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [666312528, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 17:00:02] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1 = 1  
main> [2017-11-22 17:00:02] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 17:00:02] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4ba480] 
main> [2017-11-22 17:00:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4455f57d] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 17:00:02] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 17:00:02] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [704387627, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 17:00:02] [getMaxBookid] [139] [DEBUG] ==>  Preparing: select max(bookid) bookid from book  
main> [2017-11-22 17:00:02] [getMaxBookid] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 17:00:02] [getMaxBookid] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4455f57d] 
main> [2017-11-22 17:00:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [628164202, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:00:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [628164202, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [628164202, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bde1f3a] 
main> [2017-11-22 17:00:02] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [628164202, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:00:02] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:00:02] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 17:00:02] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bde1f3a] 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bde1f3a] 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bde1f3a] 
main> [2017-11-22 17:00:02] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bde1f3a] 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [628164202, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:00:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [628164202, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:00:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [628164202, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:00:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:00:23] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:00:23 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:00:23] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:00:24] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:00:24] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:00:24] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:00:24] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:00:24] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:00:24] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:00:24] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:00:24] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:00:24] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:00:24] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:00:24] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:00:24] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:00:24] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:00:24] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:00:24] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:00:24] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:00:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:00:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:00:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:00:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:00:24] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:00:24] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:00:24] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:00:24] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:00:24] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:00:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:00:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:00:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:00:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:00:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:00:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:00:24] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:00:24] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:00:24] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:00:24] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:00:24] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 17:00:24] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 17:00:24] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:00:24] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:00:24] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:00:24] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:00:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:00:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:00:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:00:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:00:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:00:35] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:00:35 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:00:35] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:00:35] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:00:35] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:00:35] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:00:35] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:00:35] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:00:35] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:00:35] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:00:35] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:00:35] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:00:35] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:00:35] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:00:35] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:00:35] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:00:35] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:00:35] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:00:35] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:00:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:00:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:00:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:00:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:00:35] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:00:35] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:00:35] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:00:35] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:00:35] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:00:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:00:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:00:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:00:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:00:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:00:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:00:36] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:00:36] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:00:36] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:00:36] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:00:36] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 17:00:36] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 17:00:36] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:00:36] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:00:36] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:00:36] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:00:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:00:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:00:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:00:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:00:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:01:46] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:01:46 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:01:46] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:01:46] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:01:46] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:01:46] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:01:46] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:01:46] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:01:46] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:01:46] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:01:46] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:01:46] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:01:46] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:01:46] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:01:46] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:01:46] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:01:46] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:01:46] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:01:46] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:01:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:01:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:01:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:01:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:01:46] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:01:46] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:46] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:01:46] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:01:46] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:01:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:01:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:01:46] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:01:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:01:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:01:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:01:47] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:01:47] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:01:47] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:01:47] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:01:47] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 17:01:47] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 17:01:47] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:01:47] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:01:47] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:01:47] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:01:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:01:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:01:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:01:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:01:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:03:51] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:03:51 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:03:51] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:03:52] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:03:52] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:03:52] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:03:52] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:03:52] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:03:52] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:03:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:03:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:03:52] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:03:52] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:03:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:03:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:03:52] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:03:52] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:03:52] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:03:52] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:03:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:03:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:03:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:03:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:03:52] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:03:52] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:03:52] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:03:52] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:03:52] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:03:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:03:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:03:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:03:52] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:03:52] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:03:52] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:03:52] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:03:52] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:03:53] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:03:53] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:03:53] [selectLike] [139] [DEBUG] ==> Parameters: ja(String) 
main> [2017-11-22 17:03:53] [selectLike] [139] [DEBUG] <==      Total: 0 
main> [2017-11-22 17:03:53] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:03:53] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:03:53] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:03:53] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:03:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:03:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:03:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:03:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:03:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:13:15] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:13:15 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:13:16] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:13:16] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:13:16] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:13:16] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:13:16] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:13:16] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:13:16] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:13:16] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:13:16] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:13:16] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:13:16] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:13:16] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:13:16] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:13:16] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:13:16] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:13:16] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:13:16] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:13:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:13:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:13:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:13:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:13:16] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:13:16] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:13:16] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:13:16] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:13:16] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:13:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:13:16] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:13:16] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:13:16] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:13:16] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:13:16] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:13:16] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:13:16] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:13:16] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:13:16] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:13:17] [selectLike] [139] [DEBUG] ==> Parameters: %ja%(String) 
main> [2017-11-22 17:13:17] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:13:17] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:13:17] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:13:17] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:13:17] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:13:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:13:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:13:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:13:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:13:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:14:38] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:14:38 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:14:38] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:14:38] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:14:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:14:38] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:14:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:14:38] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:14:38] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:14:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:14:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:14:38] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:14:38] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:14:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:14:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:14:38] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:14:38] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:14:38] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:14:38] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:14:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:14:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:14:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:14:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:14:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:14:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:14:39] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:14:39] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:14:39] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:14:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:14:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:14:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:14:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:14:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:14:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:14:39] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:14:39] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:14:39] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:14:39] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:14:39] [selectLike] [139] [DEBUG] ==> Parameters: %ja%(String) 
main> [2017-11-22 17:14:39] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:14:39] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:14:39] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:14:39] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:14:39] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:14:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:14:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:14:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:14:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:14:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:21:05] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:21:05 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:21:05] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:21:06] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:21:06] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:21:06] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:21:06] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:21:06] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:21:06] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:21:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:21:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:21:06] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:21:06] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:21:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:21:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:21:06] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:21:06] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:21:06] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:21:06] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:21:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:21:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:21:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:21:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:21:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:21:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:06] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:21:06] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:21:06] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:21:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:21:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:21:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:21:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:21:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:21:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:21:06] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:21:06] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:21:06] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:21:06] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ? and publisher like ?  
main> [2017-11-22 17:21:06] [selectLike] [139] [DEBUG] ==> Parameters: %ja%(String), hall(String) 
main> [2017-11-22 17:21:06] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:21:06] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:21:06] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:21:06] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:21:06] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:21:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:21:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:21:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:21:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:21:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:21:55] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:21:55 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:21:55] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:21:55] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:21:55] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:21:55] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:21:55] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:21:55] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:21:55] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:21:55] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:21:55] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:21:55] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:21:55] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:21:55] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:21:55] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:21:55] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:21:55] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:21:55] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:21:55] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:21:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:21:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:21:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:21:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:21:55] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:21:55] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:21:55] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:21:55] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:21:55] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:21:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:21:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:21:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:21:56] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:21:56] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:21:56] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:21:56] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:21:56] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:21:56] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:21:56] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:21:56] [selectLike] [139] [DEBUG] ==> Parameters: %ja%(String) 
main> [2017-11-22 17:21:56] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:21:56] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:21:56] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:21:56] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:21:56] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:21:56] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:21:56] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:21:56] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:21:56] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:21:56] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:22:04] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:22:04 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:22:04] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:22:05] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:22:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:22:05] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:22:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:22:05] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:22:05] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:22:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:05] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:22:05] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:22:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:22:05] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:22:05] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:22:05] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:22:05] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:22:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:22:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:22:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:22:05] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:22:05] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:22:05] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:22:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:22:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:22:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:22:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:22:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:22:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:22:05] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:22:05] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:22:05] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:22:05] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:22:05] [selectLike] [139] [DEBUG] ==> Parameters: %ja%(String) 
main> [2017-11-22 17:22:05] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:22:05] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:22:05] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:22:05] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:22:05] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:22:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:22:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:22:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:22:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:22:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:22:23] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:22:23 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:22:23] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:22:23] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:22:23] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:22:23] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:22:23] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:22:23] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:22:23] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:22:23] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:23] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:24] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:22:24] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:24] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:22:24] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:22:24] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:22:24] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:22:24] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:22:24] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:22:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:22:24] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:22:24] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:22:24] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:22:24] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:22:24] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:22:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:22:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:22:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:22:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:22:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:22:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:22:24] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:22:24] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:22:24] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:22:24] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:22:24] [selectLike] [139] [DEBUG] ==> Parameters: %ja%(String) 
main> [2017-11-22 17:22:24] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:22:24] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:22:24] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:22:24] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:22:24] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:22:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:22:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:22:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:22:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:22:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:22:31] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:22:31 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:22:31] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:22:32] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:22:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:22:32] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:22:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:22:32] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:22:32] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:22:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:32] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:22:32] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:22:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:22:32] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:22:32] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:22:32] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:22:32] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:22:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:22:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:22:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:22:32] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:22:32] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:22:32] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:22:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:22:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:22:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:22:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:22:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:22:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:22:32] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:22:32] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:22:32] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:22:32] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ? and publisher like ?  
main> [2017-11-22 17:22:32] [selectLike] [139] [DEBUG] ==> Parameters: %ja%(String), hall(String) 
main> [2017-11-22 17:22:32] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:22:32] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:22:32] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:22:32] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:22:32] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:22:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:22:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:22:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:22:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:22:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:23:10] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:23:10 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:23:10] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:23:10] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:23:10] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:23:10] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:23:10] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:23:10] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:23:10] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:23:10] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:23:10] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:23:10] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:23:10] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:23:10] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:23:10] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:23:10] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:23:10] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:23:10] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:23:10] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:23:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:23:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:23:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:23:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:23:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:23:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:23:11] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:23:11] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:23:11] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:23:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:23:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:23:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:23:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:23:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:23:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:23:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:23:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:23:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:23:11] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ? and publisher like ?  
main> [2017-11-22 17:23:11] [selectLike] [139] [DEBUG] ==> Parameters: %ja%(String), hall(String) 
main> [2017-11-22 17:23:11] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:23:11] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:23:11] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:23:11] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:23:11] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:23:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:23:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:23:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:23:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:23:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:23:32] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:23:32 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:23:32] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:23:33] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:23:33] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:23:33] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:23:33] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:23:33] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:23:33] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:23:33] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:23:33] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:23:33] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:23:33] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:23:33] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:23:33] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:23:33] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:23:33] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:23:33] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:23:33] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:23:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:23:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:23:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:23:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:23:33] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:23:33] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:23:33] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:23:33] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:23:33] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:23:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:23:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:23:33] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:23:33] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:23:33] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:23:33] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:23:33] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:23:33] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:23:33] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:23:33] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ? and publisher like ?  
main> [2017-11-22 17:23:33] [selectLike] [139] [DEBUG] ==> Parameters: %ja%(String), hall(String) 
main> [2017-11-22 17:23:33] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:23:34] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:23:34] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:23:34] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:23:34] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:23:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:23:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:23:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:23:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:23:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:32:46] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:32:46 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:32:46] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:32:46] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:32:47] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:32:47] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:32:47] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:32:47] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:32:47] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:32:47] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:32:47] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:32:47] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:32:47] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:32:47] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:32:47] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:32:47] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:32:47] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:32:47] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:32:47] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:32:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:32:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:32:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:32:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:32:47] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:32:47] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:32:47] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:32:47] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:32:47] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:32:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:32:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:32:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:32:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:32:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:32:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:32:47] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:32:47] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:32:47] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:32:47] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 17:32:47] [selectEqual] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 17:32:47] [selectEqual] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 17:32:47] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:32:47] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:32:47] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:32:47] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:32:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:32:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:32:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:32:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:32:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:33:19] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:33:19 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:33:19] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:33:20] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:33:20] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:33:20] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:33:20] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:33:20] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:33:20] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:33:20] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:33:20] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:33:20] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:33:20] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:33:20] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:33:20] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:33:20] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:33:20] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:33:20] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:33:20] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:33:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:33:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:33:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:33:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:33:20] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:33:20] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:33:20] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:33:20] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:33:20] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:33:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:33:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:33:20] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:33:20] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:33:20] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:33:20] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:33:20] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:33:20] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:33:20] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:33:20] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 17:33:20] [selectEqual] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 17:33:20] [selectEqual] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 17:33:20] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:33:20] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:33:20] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:33:20] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1869f114] 
main> [2017-11-22 17:33:20] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:33:20] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:33:20] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:33:20] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:33:20] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:34:31] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:34:31 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:34:31] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:34:31] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:34:31] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:34:31] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:34:31] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:34:31] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:34:31] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:34:31] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:34:31] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:34:31] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:34:31] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:34:31] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:34:31] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:34:31] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:34:31] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:34:31] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:34:31] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:34:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:34:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:34:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:34:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:34:31] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:34:31] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:34:31] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:34:31] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:34:31] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:34:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:34:31] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:34:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:34:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:34:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:34:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:34:32] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:34:32] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:34:32] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:34:32] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname = ?  
main> [2017-11-22 17:34:32] [selectEqual] [139] [DEBUG] ==> Parameters: java(String) 
main> [2017-11-22 17:34:32] [selectEqual] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:34:32] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:34:32] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:34:32] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:34:32] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:34:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:34:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:34:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:34:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:34:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:34:56] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:34:56 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:34:56] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:34:56] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:34:56] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:34:56] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:34:56] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:34:56] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:34:56] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:34:56] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:34:56] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:34:56] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:34:56] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:34:56] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:34:56] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:34:56] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:34:56] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:34:56] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:34:56] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:34:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:34:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:34:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:34:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:34:56] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:34:56] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:34:56] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:34:56] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:34:56] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:34:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:34:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:34:56] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:34:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:34:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:34:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:34:57] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:34:57] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:34:57] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:34:57] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname = ?  
main> [2017-11-22 17:34:57] [selectEqual] [139] [DEBUG] ==> Parameters: java(String) 
main> [2017-11-22 17:34:57] [selectEqual] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:34:57] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:34:57] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:34:57] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:34:57] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59942b48] 
main> [2017-11-22 17:34:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:34:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:34:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:34:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:34:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:45:22] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:45:22 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:45:22] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:45:22] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:45:22] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:45:22] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:45:22] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:45:22] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:45:22] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:45:22] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:45:22] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:45:22] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:45:22] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:45:22] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:45:22] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:45:22] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:45:22] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:45:22] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:45:22] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:45:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:45:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:45:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:45:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:45:22] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:45:22] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:45:22] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:45:22] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:45:22] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:45:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:45:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:45:22] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:45:23] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:45:23] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:45:23] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:45:23] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 17:45:23] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 17:45:23] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 17:45:23] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 17:45:23] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 17:45:23] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:45:23] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:45:23] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:45:23] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:45:39] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:45:39 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:45:40] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:45:40] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:45:40] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:45:40] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:45:40] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:45:40] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:45:40] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:45:40] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:45:40] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:45:40] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:45:40] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:45:40] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:45:40] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:45:40] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:45:40] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:45:40] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:45:40] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:45:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:45:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:45:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:45:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:45:40] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:45:40] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:45:40] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:45:40] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:45:40] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:45:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:45:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:45:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:45:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:45:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:45:40] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:45:40] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:45:40] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:45:40] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:45:40] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:45:40] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:45:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:45:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:45:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:45:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:45:50] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:45:50 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:45:50] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:45:50] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:45:50] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:45:50] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:45:50] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:45:50] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:45:50] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:45:50] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:45:50] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:45:50] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:45:50] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:45:50] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:45:50] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:45:50] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:45:50] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:45:50] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:45:50] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:45:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:45:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:45:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:45:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:45:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:45:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:45:51] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:45:51] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:45:51] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:45:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:45:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:45:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:45:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:45:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:45:51] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:45:51] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:45:51] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:45:51] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:45:51] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:45:51] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:45:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:45:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:45:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:45:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:48:47] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:48:47 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:48:47] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:48:48] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:48:48] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:48:48] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:48:48] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:48:48] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:48:48] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:48:48] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:48:48] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:48:48] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:48:48] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:48:48] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:48:48] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:48:48] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:48:48] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:48:48] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:48:48] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:48:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:48:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:48:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:48:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:48:48] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:48:48] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:48:48] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:48:48] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:48:48] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:48:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:48:48] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:48:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:48:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:48:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:48:48] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:48:48] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:48:48] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:48:48] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:48:48] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:48:48] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:48:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:48:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:48:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:48:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:54:25] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:54:25 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:54:25] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:54:25] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:54:26] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:54:26] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:54:26] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:54:26] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:54:26] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:54:26] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:54:26] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:54:26] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:54:26] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:54:26] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:54:26] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:54:26] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:54:26] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:54:26] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:54:26] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:54:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:54:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:54:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:54:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:54:26] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:54:26] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:54:26] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:54:26] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:54:26] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:54:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:54:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:54:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:54:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:54:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:54:26] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:54:26] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 17:54:26] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 17:54:26] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 17:54:26] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 17:54:26] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 17:54:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:54:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:54:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:54:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:54:32] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 17:54:32 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:54:32] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:54:32] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:54:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:54:32] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:54:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:54:32] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:54:32] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:54:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:54:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:54:32] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:54:32] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 17:54:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:54:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:54:32] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:54:32] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:54:32] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:54:32] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:54:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:54:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:54:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:54:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:54:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:54:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:54:32] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:54:32] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:54:32] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:54:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:54:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:54:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:54:33] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:54:33] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:54:33] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:54:33] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:54:33] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:54:33] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:54:33] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:54:33] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 17:54:33] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:54:33] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:54:33] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:54:33] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:00:25] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 18:00:25 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:00:25] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:00:25] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:00:25] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:00:25] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:00:25] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:00:25] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:00:25] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:00:25] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:00:25] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:00:25] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:00:25] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:00:25] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:00:25] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:00:25] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:00:25] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:00:25] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:00:25] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:00:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:00:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:00:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:00:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:00:25] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:00:25] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:00:26] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:00:26] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:00:26] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:00:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:00:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:00:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:00:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:00:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:00:26] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:00:26] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:00:26] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:00:26] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:00:26] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:00:26] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:00:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:00:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:00:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:00:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:03:39] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 18:03:39 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:03:39] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:03:39] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:03:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:03:39] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:03:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:03:39] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:03:39] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:03:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:03:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:03:39] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:03:39] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:03:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:03:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:03:39] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:03:39] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:03:39] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:03:39] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:03:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:03:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:03:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:03:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:03:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:03:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:03:39] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:03:39] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:03:39] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:03:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:03:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:03:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:03:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:03:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:03:40] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:03:40] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:03:40] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:03:40] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:03:40] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:03:40] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:03:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:03:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:03:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:03:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:05:03] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 18:05:03 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:05:03] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:05:03] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:05:03] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:05:03] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:05:03] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:05:03] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:05:03] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:05:03] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:03] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:03] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:05:03] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:03] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:05:03] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:05:03] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:05:03] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:05:04] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:05:04] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:05:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:05:04] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:05:04] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:05:04] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:05:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:05:37] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 18:05:37 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:05:37] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:05:37] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:05:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:05:38] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:05:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:05:38] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:05:38] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:05:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:38] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:05:38] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:05:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:05:38] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:05:38] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:05:38] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:05:38] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:05:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:05:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:05:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:05:38] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:05:38] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:05:38] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:05:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:05:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:05:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:05:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:05:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:05:38] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:05:38] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:05:38] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:05:38] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:05:38] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:05:38] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59712875] 
main> [2017-11-22 18:05:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:05:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:05:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1702478809, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:05:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:08:05] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 18:08:05 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:08:05] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:08:05] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:08:06] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:08:06] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:08:06] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:08:06] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:08:06] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:08:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:08:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:08:06] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:08:06] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:08:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:08:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:08:06] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:08:06] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:08:06] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:08:06] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:08:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:08:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:08:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:08:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:08:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:08:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@287f94b1] 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:08:06] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:08:06] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:08:06] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:08:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:08:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:08:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:08:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:08:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:08:06] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:08:06] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 18:08:06] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 18:08:06] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 18:08:06] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 18:08:06] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47b2e9e1] 
main> [2017-11-22 18:08:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:08:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:08:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [45643137, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:08:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:09:37] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 18:09:37 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:09:37] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:09:38] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:09:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:09:38] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:09:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:09:38] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:09:38] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:09:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:09:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:09:38] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:09:38] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:09:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:09:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:09:38] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:09:38] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:09:38] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:09:38] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:09:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:09:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:09:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:09:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:09:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:09:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@525d79f0] 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:09:38] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:09:38] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:09:38] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:09:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:09:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:09:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:09:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:09:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:09:38] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:09:38] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:09:38] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:09:38] [insertBook] [139] [DEBUG] ==>  Preparing: insert into book(bookname, publisher, year, price, dtm, use_yn, authid) values(?, ?, ?, ?, ?, ?, ?)  
main> [2017-11-22 18:09:38] [insertBook] [139] [DEBUG] ==> Parameters: test(String), 내가(String), 2017(String), 10000(Integer), 2017-11-22 00:00:00.0(Timestamp), true(Boolean), 5(Integer) 
main> [2017-11-22 18:09:38] [insertBook] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 18:09:38] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:09:38] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:09:38] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:09:38] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:09:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:09:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:09:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:09:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:10:26] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 18:10:26 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:10:26] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:10:26] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:10:26] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:10:26] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:10:26] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:10:26] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:10:26] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:10:26] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:26] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:26] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:10:26] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:26] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:10:26] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:10:26] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:10:26] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:10:26] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:10:26] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:10:27] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:27] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:27] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:27] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:10:27] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:10:27] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@525d79f0] 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:10:27] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:10:27] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:10:27] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:10:27] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:10:27] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:10:27] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:10:27] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:10:27] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:10:27] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:10:27] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:10:27] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:10:27] [insertBook] [139] [DEBUG] ==>  Preparing: insert into book(bookname, publisher, year, price, dtm, use_yn, authid) values(?, ?, ?, ?, ?, ?, ?)  
main> [2017-11-22 18:10:27] [insertBook] [139] [DEBUG] ==> Parameters: test(String), 내가(String), 2017(String), 10000(Integer), 2017-11-22 00:00:00.0(Timestamp), true(Boolean), 3(Integer) 
main> [2017-11-22 18:10:27] [insertBook] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 18:10:27] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:10:27] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:10:27] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:10:27] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:10:27] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:10:27] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:10:27] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:10:27] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:10:42] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 18:10:42 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:10:42] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:10:43] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:10:43] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:10:43] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:10:43] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:10:43] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:10:43] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:10:43] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:43] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:43] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:10:43] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:43] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:10:43] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:10:43] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:10:43] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:10:43] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:10:43] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:10:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:10:43] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:10:43] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@525d79f0] 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:10:43] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:10:43] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:10:43] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:10:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:10:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:10:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:10:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [123674777, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:10:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [123674777, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:10:43] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:10:43] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a645fd] 
main> [2017-11-22 18:10:43] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [123674777, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:10:43] [insertBook] [139] [DEBUG] ==>  Preparing: insert into book(bookname, publisher, year, price, dtm, use_yn, authid) values(?, ?, ?, ?, ?, ?, ?)  
main> [2017-11-22 18:10:43] [insertBook] [139] [DEBUG] ==> Parameters: test(String), 내가(String), 2017(String), 10000(Integer), 2017-11-22 00:00:00.0(Timestamp), true(Boolean), 3(Integer) 
main> [2017-11-22 18:10:43] [insertBook] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 18:10:43] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a645fd] 
main> [2017-11-22 18:10:43] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a645fd] 
main> [2017-11-22 18:10:43] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a645fd] 
main> [2017-11-22 18:10:43] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a645fd] 
main> [2017-11-22 18:10:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:10:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [123674777, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:10:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [123674777, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:10:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:10:53] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@589b3632: startup date [Wed Nov 22 18:10:53 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:10:53] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:10:54] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:10:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:10:54] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:10:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:10:54] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:10:54] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:10:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:10:54] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:10:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/mybatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:10:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 g  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:10:54] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:10:54] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:10:54] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:10:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:10:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:10:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@525d79f0] 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.update(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.delete(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:54] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:10:54] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:10:54] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:10:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:10:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:10:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:10:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:10:54] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:10:54] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:10:54] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:10:54] [insertBook] [139] [DEBUG] ==>  Preparing: insert into book(bookname, publisher, year, price, dtm, use_yn, authid) values(?, ?, ?, ?, ?, ?, ?)  
main> [2017-11-22 18:10:54] [insertBook] [139] [DEBUG] ==> Parameters: test(String), 내가(String), 2017(String), 10000(Integer), 2017-11-22 00:00:00.0(Timestamp), true(Boolean), 3(Integer) 
main> [2017-11-22 18:10:54] [insertBook] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 18:10:54] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:10:54] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:10:54] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:10:54] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b50ec] 
main> [2017-11-22 18:10:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:10:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:10:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1412564235, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:10:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
